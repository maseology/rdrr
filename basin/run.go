package basin

import (
	"fmt"
	"log"
)

// Run a single simulation with water balance checking
func Run(ldr *Loader, rill, m, n float64) float64 {
	d := newDomain(ldr)
	b := d.newSubDomain(ldr.outlet)
	fmt.Printf("\n building sample HRUs and TOPMODEL\n\n")
	// smpl := b.toDefaultSample(m, n)
	u := []float64{0.4874755944045194, 0.07937669009043824, 0.011487498286322813, 0.8232257390763317, 0.6496243952511342, 0.02016118261162063, 0.7882056254257939, 0.03482319848307759, 0.9654881510041909, 0.8812859578891827, 0.20184834301564725, 0.09109562447816058, 0.018980426156618168, 0.2285404532581679, 0.28552018618985275, 0.9577155335278202, 0.8729951208629172, 0.17291795514975825, 0.6435497253711251, 0.5377201413920882, 0.603910916072032, 0.9429964502210733, 0.18793705978540545, 0.9824465413154553, 0.2544825714210033, 0.42189490408742225, 0.31946025843378467, 0.030620881965828742, 0.09116723260457607, 0.4674483626973659, 0.9224681016664905, 0.09786095550939256, 0.2966733724927942, 0.6276764648657159, 0.7533172259014885}
	smpl := b.toSampleU(u...)
	// smpl1 := b.toSampleU(0.33751034406732233, 0.3517190362646418, 0.16374107363310889, 0.8127152405643698, 0.8459842769287653, 0.9421089294630323, 0.04939533652277711, 0.01849119842187086, 0.035522353840134045, 0.06931435664042102, 0.13422501742399848, 0.9796603726983009, 0.6322179850211794, 0.5992294277444489, 0.9339759770939073, 0.18357131816809572, 0.40553384240303203, 0.8567417701260007, 0.6617576210966368, 0.1637022989277712, 0.24342428879600753, 0.5637663727159402, 0.7099829417700398, 0.9468875557788897, 0.9124745543664514, 0.3976609552541257, 0.10970369270419887, 0.5340533771409053, 0.9738664421323615, 0.1928905939959194, 0.06807073997310062, 0.8299095619277346, 0.7409330744630067, 0.7392119964037015, 0.24653138711267425)

	// if ok, s := smpl.gw.IsSame(&smpl1.gw); !ok {
	// 	println("gw: " + s)
	// }

	for _, c := range b.cids {
		if smpl.ws[c] == nil {
			log.Fatalln(" basin.Run() error: nil hru")
		}
	}
	b.printParam(u...)
	return b.evalCascKineWB(&smpl, true)
}
