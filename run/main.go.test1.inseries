package main

import (
	"fmt"
	"time"

	"rdrr2/model"
)

func main() {

	lus := make([]*model.Surface, 3)
	for i := 0; i < 3; i++ {
		lus[i] = &model.Surface{ID: i + 1, Flux: make(chan float64)}
	}

	c0, c1, c2 := make(chan float64), make(chan float64), make(chan float64)
	done := make(chan interface{})
	c1 = lus[0].SpinUp(done, c0, 1)
	c2 = lus[1].SpinUp(done, c1, 1)
	o2 := lus[2].SpinUp(done, c2, 2)

	fmt.Println("spun up..")

	fmt.Println("spiking..")
	c0 <- 88. // input
	c1 <- 44. // input

	// outlet
	fmt.Println(<-o2)

	close(done)
	time.Sleep(time.Second) // just allows console prointing to complete

}

func asChan(vs ...float64) chan float64 {
	c := make(chan float64)
	go func() {
		for _, v := range vs {
			c <- v
		}
		close(c)
	}()
	return c
}
